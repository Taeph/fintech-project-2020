<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cart</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  </head>
  <script src="https://cdn.bootpay.co.kr/js/bootpay-3.2.6.min.js" type="application/javascript"></script>

  <body>
    <!-- 장바구니 -->
    <div class="tab-pane" id="cart">
      <div class="container">
        <div class="page-header">
          <h3>장바구니</h3>
        </div>
        <div class="well">
          <div class="container">
            <div class="row">
              <div class="col-xs-9">
                <h3>총 상품 가격</h3>
              </div>
              <div class="col-xs-3">
                <h3>
                  <small><span id="totalPrice"></span>원</small>
                </h3>
              </div>
            </div>
          </div>
          <hr />
          <div class="container">
            <button type="submit" class="btn btn-success" id="payBtn">
              <span class="glyphicon glyphicon-ok"></span> 결제하기
            </button>
            <button type="button" class="btn btn-danger" id="removeBtn">
              <span class="glyphicon glyphicon-remove"></span> 삭제하기
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>

<script>
  const ajax = $.ajax;
  const application_id = "5f34ea102fa5c20025eecac0";
  // 장바구니에 담을 상품
  let cartItems = [
    {
      item_name: "돈까스",
      qty: 3,
      unique: "123",
      price: 4000,
    },
    {
      item_name: "치즈라면",
      qty: 6,
      unique: "345",
      price: 4000,
    },
    {
      item_name: "해물라면",
      qty: 6,
      unique: "234",
      price: 4000,
    },
  ];
  let totalPrice = 0; // 장바구니 총 가격
  let area_nm = "건천(부산) 휴게소"; // 휴게소 이름
  let phone_no = "010-3101-8031"; // 전화번호

  // 총 가격 계산
  for (let item of cartItems) {
    totalPrice = totalPrice + item.qty * item.price;
  }

  $(() => {
    $("#totalPrice").text(totalPrice);
    // 메뉴 개수에 따른 장바구니 목록 출력
    for (item of cartItems) {
      $(".well").prepend(
        `<div class="panel-group" id="${item.unique}panel">
                      <div class="panel panel-primary">
                          <div class="panel-heading">
                              <input type="checkbox" id="${item.unique}checkBox" value="${
          item.unique
        }" name="menuCheckBox"/>
                              <span id="${item.unique}name">
                                  ${item.item_name}
                              </span>
                          </div>
                          <div class="panel-body">
                              <div class="container" style="align-items: center;">
                                  <div class="row">
                                      <div class="col-xs-3">
                                          <p>수량</p>
                                      </div>
                                      <div class="col-xs-6">
                                          <button type="button" class="btn btn-default btn-xs" id="${
                                            item.unique
                                          }minusBtn">
                                              <span class="glyphicon glyphicon-minus"></span>
                                          </button>
                                          &nbsp;
                                          <span id="${item.unique}count">${item.qty}</span>
                                          &nbsp;
                                          <button type="button" class="btn btn-default btn-xs" id="${
                                            item.unique
                                          }plusBtn">
                                              <span class="glyphicon glyphicon-plus"></span>
                                          </button>
                                      </div>
                                      <div class="col-xs-3">
                                          <span class="price" id="${item.unique}price">${item.price * item.qty}</span>원
                                      </div>
                                  </div>
                              </div>
                          </div>
                      </div>
                  </div>`
      );
    }
    // 메뉴마다 + - 버튼 기능 추가하기
    for (let i = 0; i < cartItems.length; i++) {
      //수량 + 버튼
      $(`#${cartItems[i].unique}plusBtn`).click(() => {
        let count = $(`#${cartItems[i].unique}count`).text(); // 수량
        let price = cartItems[i].price; // 음식 가격

        count = parseInt(count) + 1;
        price = parseInt(price) * count;
        totalPrice = totalPrice + cartItems[i].price;

        cartItems[i].qty = count;
        $(`#${cartItems[i].unique}count`).text(count); // 삽입
        $(`#${cartItems[i].unique}price`).text(price); // 삽입
        $(`#totalPrice`).text(totalPrice); // 삽입
      });
      // 수량 - 버튼
      $(`#${cartItems[i].unique}minusBtn`).click(() => {
        let count = $(`#${cartItems[i].unique}count`).text(); // 수량
        let price = cartItems[i].price; // 음식 가격

        count = parseInt(count) - 1;

        if (count < 0) {
          count = 0;
        } else {
          totalPrice = totalPrice - cartItems[i].price; // 수량이 0이면 총 가격에 변화 없음
        }
        price = parseInt(price) * count;

        cartItems[i].qty = count;
        $(`#${cartItems[i].unique}count`).text(count); // 삽입
        $(`#${cartItems[i].unique}price`).text(price); // 삽입
        $(`#totalPrice`).text(totalPrice); // 삽입
      });
    }

    // 결제하기
    $("#payBtn").click(() => {

      let totalPrice = 0;
      let orderList = [];
      let orderListCnt = document.getElementsByName("menuCheckBox").length;
      for (let i = 0; i < orderListCnt; i++) {
        let orderItem = {};

        orderItem.unique = document.getElementsByName("menuCheckBox")[i].value;
        orderItem.qty = document.getElementById(orderItem.unique + "count").innerText;
        orderItem.cost = document.getElementById(orderItem.unique + "price").innerText;
        orderItem.item_name = document.getElementById(orderItem.unique + "name").innerText;
        orderList.push(orderItem);
        totalPrice = totalPrice + parseInt(orderItem.cost);
        document.getElementById("totalPrice").innerText = totalPrice;
      }

      console.log(orderList);

      BootPay.request({
        price: totalPrice, //실제 결제되는 가격
        application_id,
        name: area_nm, //결제창에서 보여질 이름
        pg: "",
        method: "", //결제수단, 입력하지 않으면 결제수단 선택부터 화면이 시작합니다.
        show_agree_window: 0, // 부트페이 정보 동의 창 보이기 여부
        // items: orderList,
        order_id: "고유order_id_1234", //고유 주문번호로, 생성하신 값을 보내주셔야 합니다.
      })
        .error(function (data) {
          //결제 진행시 에러가 발생하면 수행됩니다.
          console.log(data);
        })
        .cancel(function (data) {
          //결제가 취소되면 수행됩니다.
          console.log(data);
        })
        .ready(function (data) {
          // 가상계좌 입금 계좌번호가 발급되면 호출되는 함수입니다.
          console.log(data);
        })
        .confirm(function (data) {
          //결제가 실행되기 전에 수행되며, 주로 재고를 확인하는 로직이 들어갑니다.
          //주의 - 카드 수기결제일 경우 이 부분이 실행되지 않습니다.
          console.log(data);
          var enable = true; // 재고 수량 관리 로직 혹은 다른 처리
          if (enable) {
            BootPay.transactionConfirm(data); // 조건이 맞으면 승인 처리를 한다.
          } else {
            BootPay.removePaymentWindow(); // 조건이 맞지 않으면 결제 창을 닫고 결제를 승인하지 않는다.
          }
        })
        .close(function (data) {
          // 결제창이 닫힐때 수행됩니다. (성공,실패,취소에 상관없이 모두 수행됨)
          console.log(data);
        })
        .done(function (data) {
          //결제가 정상적으로 완료되면 수행됩니다
          //비즈니스 로직을 수행하기 전에 결제 유효성 검증을 하시길 추천합니다.

          // 결제 완료된 데이터 서버로 넘기기
          ajax({
            url: "/insertOrderList",
            type: "POST",
            data: {
              area_nm, // 휴게소 이름
              total_cost: totalPrice, // 총 가격
              phone_no, // 주문자 번호
              lists: JSON.stringify(orderList), // 주문 내역
            },
            success: function (data) {
              // 결제완료시 주문번호 리턴
              console.log(data);
            },
          });
        });
    });
    // 장바구니 삭제
    $("#removeBtn").click(() => {
      let checkedMenu = $("input:checked");
      if (checkedMenu) {
        $("input:checked").each(function () {
          let removedPrice = $(`#${this.value}price`).text();
          totalPrice -= removedPrice;
          $(`#${this.value}panel`).remove(); // 장바구니 삭제
        });
        $(`#totalPrice`).text(totalPrice); // 삽입
      }
    });
  });
</script>
<!--
    $("#removeBtn").click(() => {
        let checkedMenu = $("input:checked");
        if (checkedMenu) {
            $('input:checked').each(() => {
                let index = items.findIndex((value, index, array) => {
                    return value.unique === $('input:checked').val();
                }) 
                console.log(index)
                totalPrice = parseInt(totalPrice) - (items[index].qty * items[index].price)
            console.log(items.pop(index));
            //   let removedPrice = document.getElementById("" + unique + "").innerHTML;
            //   totalPrice -= removedPrice
        })
        $('input:checked').parentsUntil('.panel-group').remove() // 장바구니 삭제
        $(`#totalPrice`).text(totalPrice) // 삽입
    }
});
-->
