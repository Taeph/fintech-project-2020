<!DOCTYPE html>
<html lang="en">

<head>
    <title>휴게소 바로 주문</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <script src="https://kit.fontawesome.com/1853ff613c.js" crossorigin="anonymous"></script>
</head>

<body>
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/home"><i class="fas fa-utensils" style="color:#ffff; font-size:25px"></i></a>
            </div>
            <div class="collapse navbar-collapse" id="myNavbar">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="/home"><i class="fas fa-home"></i> Home</a></li>
                    <li><a href="/cart"><i class="fas fa-shopping-cart"></i> Cart</a></li>
                    <li><a href="/orderlist"><i class="fas fa-list-ul"></i> OrderList</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <div style="text-align: center;">
        <h4><i class="fas fa-map-marked-alt" style="font-size:25px; padding-right:10px"></i>지도에서 확인하기</h4>
    </div>

    <div class="panel panel-default" style="margin:20px">
        <div class="panel-body">
        <div id="kakaoMap" style="width: 100%; height:400px;">
        </div>
        <script type="text/javascript"
            src="//dapi.kakao.com/v2/maps/sdk.js?appkey=d698315979c98f65a32752dc88bd959d"></script>
        <script type="text/javascript"
            src="https://apis.openapi.sk.com/tmap/jsv2?version=1&appKey=l7xx81d8228c35324ed3be2ba79ed4c15a67"></script>
        </div>
    </div>
    <br>
    <div style="text-align: center;">
        <h4><i class="fas fa-map-marker-alt" style="font-size:25px"></i> 근처 휴게소 목록</h4>
    </div>

    <div class="list-group" id='restareaList' style="margin:20px">
        <form action="/restAreaInfo">
            <div id='listItems'>
                
            </div>
            <div class="text-center" style="padding-top:20px;padding-bottom:50px">
                <button type="submit" class="btn btn-info">정보보기</button>
            </div>
        </form>
    </div>
</body>

</html>

<!-- home 화면 로딩 되면, 휴게소좌표 찍기위해서 데이터 요청 -->
<script>
    const ajax = $.ajax;
    let rName;
    mainFlow();

    function mainFlow() {
        //console.log('A');
        getLoadNm();
        //console.log('B');
    }

    async function getUserPosition() {
        return new Promise((resolve, reject) => {
            var userPosition = {
                lat: null,
                lon: null,
            };
            navigator.geolocation.getCurrentPosition(function (position) {
                userPosition.lat = position.coords.latitude;
                userPosition.lon = position.coords.longitude;
                console.log('a', userPosition.lat, userPosition.lon);
                if (userPosition.lat == null || userPosition.lon == null) {
                    console.log('b', userPosition.lat, userPosition.lon);
                } else {
                    console.log('2');
                    resolve(userPosition);
                }
            })
        })
    }


    async function getLoadNm() {
        //현재위치 받아오는거 막음
        //const latlng = await getUserPosition();
        const latlng = {
            lat: 37.2651139800,
            lon: 127.4036901000,
        }
        
        // T map 도로명 API
        ajax({
            method: "GET",
            //url:"http://223.39.119.112/tmapv20/road/nearToRoad?version=1",//가까운 도로 찾기 api 요청 url입니다.
            url: "https://apis.openapi.sk.com/tmap/road/nearToRoad?version=1",//가까운 도로 찾기 api 요청 url입니다.
            async: false,
            data: {
                "appKey": "l7xx81d8228c35324ed3be2ba79ed4c15a67",
                "lon": latlng.lon,
                "lat": latlng.lat,
            },
            success: function (response) {

                var resultHeader, resultlinkPoints;

                resultHeader = response.resultData.header;
                resultlinkPoints = response.resultData.linkPoints;

                rName = resultHeader.roadName;
                console.log("rName : ", rName);

                ajax({
                    url: '/requestRestAreaLatLong',
                    type: 'POST',
                    async: false,
                    // data : {
                    //     road_nm : rName,
                    // },
                    success: function (data) {
                        const results = JSON.parse(data);
                        var map = drawRestAreaMarker(results);
                        drawUserMarker(results, map, latlng);
                    }
                });


            },
            error: function (request, status, error) {
                console.log("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
            }
        });
    }

    localStorage.removeItem('cartItem');


    // 휴게소 목록 리스트 그리기
    function drawList(results, currentPos) {
        var iValue = rName.indexOf("고속도로");
        if (iValue != -1) {
            rName = rName.substring(0, iValue);
        }

        console.log(rName);

        // const ul = document.getElementById('listItems');
        // console.log(ul);
        // while (ul.firstChild) {
        //     ul.removeChild(ul.firstChild);
        // }
        // const submit = document.createElement('input');
        // submit.type = 'submit';
        // submit.value = '휴게소 정보';
        var result_distance = new Array(results.Size);

        for (i in results) {
            var restArea_roadName = results[i].road_nm;
            var new_roadName = restArea_roadName.substring(0, restArea_roadName.length - 1);
            if (new_roadName == rName) {
                var distance = {
                    lat: results[i].latitude,
                    lon: results[i].longitude,
                }
                result_distance[i] = new Array(2);
                var dis = computeDistance(currentPos, distance);
                result_distance[i] = [dis, i];
                results[i].road_nm = restArea_roadName;
            }
            result_distance.sort(sortFunction);
            function sortFunction(a, b) {
                return (a[0] < b[0]) ? -1 : 1;
            }
        }
        var html = '';
        for (var i = 0; i < 6; i++) {
            var idx = result_distance[i][1];
            html += `<a class="list-group-item">
                        <div class="row">
                            <div class="col-xs-10">
                                <strong>${results[idx].area_nm}휴게소</strong>까지 약 <strong>${result_distance[i][0].toFixed(2)}</strong> KM
                            </div>
                            <div class="col-xs-2">
                                <input type="radio" name="area_code" value="${results[idx].area_code}" id="${results[idx].area_code}">
                            </div>
                        </div>
                    </a>`
                }

        document.getElementById('listItems').innerHTML = html;
    }

    // 지도그리기
    function drawUserMarker(results, map, userPosition) {
        // 현재 입력받은 위치 - 마커표시
        var marker;
        var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png', // 마커이미지의 주소입니다    
            imageSize = new kakao.maps.Size(32, 30), // 마커이미지의 크기입니다
            imageOption = { offset: new kakao.maps.Point(27, 69) }; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.
        var lat = userPosition.lat;
        var lon = userPosition.lon;
        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다
        var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);
        // 현재 위치를 중심으로 지도 생성
        map.setCenter(new kakao.maps.LatLng(lat, lon));
        // 마커 위치
        var markerPosition = new kakao.maps.LatLng(lat, lon);
        marker = new kakao.maps.Marker({
            position: markerPosition,
            image: markerImage // 마커이미지 설정 
        });
        marker.setMap(map);

        drawList(results, userPosition);
    }


    function drawRestAreaMarker(data) {
        var data = data;
        // var mapContainer = document.createElement("div");
        var mapContainer = document.getElementById("kakaoMap");
        var mapOption = {
            center: new kakao.maps.LatLng(37.5677463677699, 126.9153946742084), //지도의 중심좌표
            level: 7,
        };
        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도 생성 및 객체 리턴
        // 인포윈도우를 생성합니다
        var infowindow = new kakao.maps.InfoWindow({
            content: null,
            removable: true,
        });
        // 휴게소 좌표 - 마커표시
        for (var i in data) {
            var areaInfo = {
                name: data[i].area_nm,
                code: data[i].area_code,
                latitude: data[i].latitude,
                longitude: data[i].longitude,
            }
            var marker = new kakao.maps.Marker({
                map: map,
                position: new kakao.maps.LatLng(areaInfo.latitude, areaInfo.longitude),
                title: areaInfo.name,
                clickable: true
            });

            kakao.maps.event.addListener(marker, 'click', makeOverListener(map, marker, infowindow, areaInfo));
        }
        return map;
    }


    function makeOverListener(map, marker, infowindow, areaInfo) {
        return function () {
            var iwContent = 
            `<div class="container text-left" style="width: 160px;">    
                        <table class="table table-hover">
                            <tr>    
                                <td><strong>${areaInfo.name}휴게소</strong></td>
                            </tr>
                            <tr>    
                                <td><div class="text-center">
                                    <form action="/restAreaInfo">
                                        <input style="display:none" id = "area_code" name = "area_code" value = ${areaInfo.code}>
                                        <input type="submit" class="btn btn-info" value='휴게소정보'>
                                    </form>
                                </td>
                            </tr>
                        </table>    
                    </div>`
            infowindow.setContent(iwContent);
            infowindow.setPosition(new kakao.maps.LatLng(areaInfo.latitude, areaInfo.longitude));
            infowindow.open(map, marker);
        };
    }


    function computeDistance(startCoords, destCoords) {
        var startLatRads = degreesToRadians(startCoords.lat);
        var startLongRads = degreesToRadians(startCoords.lon);
        var destLatRads = degreesToRadians(destCoords.lat);
        var destLongRads = degreesToRadians(destCoords.lon);
        var Radius = 6371; //지구의 반경(km)
        var distance = Math.acos(Math.sin(startLatRads) * Math.sin(destLatRads) +
            Math.cos(startLatRads) * Math.cos(destLatRads) *
            Math.cos(startLongRads - destLongRads)) * Radius;
        return distance;
    }
    function degreesToRadians(degrees) {
        radians = (degrees * Math.PI) / 180;
        return radians;
    }
</script>